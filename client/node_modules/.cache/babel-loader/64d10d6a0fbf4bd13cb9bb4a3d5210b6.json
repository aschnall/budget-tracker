{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/budget/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    amount: null,\n    description: '',\n    type: null\n  }]);\n  useEffect(() => {\n    const initialGet = async () => {\n      let initialData = await fetch('http//localhost:3001/');\n      initialData = await initialData.json();\n      setData(initialData);\n    };\n\n    initialGet();\n  }, []); //fetching updated data after submitting new transaction\n\n  const fetchTransactions = async (amount, description, type, date) => {\n    let response = await fetch('http://localhost:3001/submit', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    response = await response.json();\n    response = response.map(({\n      amount,\n      description,\n      type,\n      date\n    }) => ({\n      amount: parseFloat(amount),\n      description,\n      type,\n      date\n    }));\n    setData(response);\n  }; //clearing database after hitting reset\n\n\n  const onReset = async () => {\n    await fetch('http://localhost:3001/reset', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    setData([{\n      amount: null,\n      description: '',\n      type: null,\n      date: ''\n    }]);\n  }; //deleting desired transaction from databse\n\n\n  const onDelete = async (amount, description, type, date) => {\n    let newData = await fetch('http://localhost:3001/delete', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    newData = await newData.json();\n\n    if (newData.length === 0) {\n      setData([{\n        amount: null,\n        description: '',\n        type: null,\n        date: ''\n      }]);\n    } else {\n      newData = newData.map(({\n        amount,\n        description,\n        type,\n        date\n      }) => ({\n        amount: parseFloat(amount),\n        description,\n        type,\n        date\n      }));\n      setData(newData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"budget-input\",\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(BudgetInput, {\n        onSubmit: fetchTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reset-button\",\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(Reset, {\n        onReset: onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BudgetList, {\n      data: data,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"NLVW3ZXU7kX9IxE18OdzhgobWfs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/budget/src/components/App.js"],"names":["React","useState","useEffect","BudgetInput","BudgetList","Balance","Reset","App","data","setData","amount","description","type","initialGet","initialData","fetch","json","fetchTransactions","date","response","method","headers","body","JSON","stringify","map","parseFloat","onReset","onDelete","newData","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport './App.css';\n\nconst App = () => {\n\n\tconst [data, setData] = useState([{ amount: null, description: '', type: null}]);\n\n\tuseEffect(()=> {\n\t\tconst initialGet = async () => {\n\t\t\tlet initialData = await fetch('http//localhost:3001/');\n\t\t\tinitialData = await initialData.json();\n\t\t\tsetData(initialData);\n\t\t};\n\t\tinitialGet()\n\t},[])\n\n\t//fetching updated data after submitting new transaction\n\tconst fetchTransactions = async (amount, description, type, date) => {\n\t\tlet response = await fetch('http://localhost:3001/submit', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tresponse = await response.json();\n\t\tresponse = response.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\tsetData(response);\n\t}\n\n\t//clearing database after hitting reset\n\tconst onReset = async () => {\n\t\tawait fetch('http://localhost:3001/reset', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t})\n\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t}\n\n\t//deleting desired transaction from databse\n\tconst onDelete = async (amount, description, type, date) => {\n\t\tlet newData = await fetch('http://localhost:3001/delete', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tnewData = await newData.json();\n\t\tif (newData.length === 0) {\n\t\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t\t} else {\n\t\t\tnewData = newData.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\t\tsetData(newData);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div id=\"budget-input\" className=\"ui container\">\n\t\t\t\t<BudgetInput onSubmit={fetchTransactions} />\n\t\t\t</div>\n\t\t\t<div id=\"reset-button\" className=\"ui container\">\n\t\t\t\t<Reset onReset={onReset} />\n\t\t\t</div>\n\t\t\t<BudgetList data={data} onDelete={onDelete}/> \n\t\t\t<Balance data={data}/> \n\t\t</div>\n\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}