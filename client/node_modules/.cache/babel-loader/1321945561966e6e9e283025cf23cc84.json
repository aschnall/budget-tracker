{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/budget/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    amount: null,\n    description: '',\n    type: null\n  }]);\n  useEffect(() => {\n    setDeleteAmount(amount);\n    setDeleteDescription(description);\n    setDeleteType(type);\n    setDeleteDate(date);\n  }, []); //fetching updated data after submitting new transaction\n\n  const fetchTransactions = async (amount, description, type, date) => {\n    let response = await fetch('http://localhost:3001/submit', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    response = await response.json();\n    response = response.map(({\n      amount,\n      description,\n      type,\n      date\n    }) => ({\n      amount: parseFloat(amount),\n      description,\n      type,\n      date\n    }));\n    setData(response);\n  }; //clearing database after hitting reset\n\n\n  const onReset = async () => {\n    await fetch('http://localhost:3001/reset', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    setData([{\n      amount: null,\n      description: '',\n      type: null,\n      date: ''\n    }]);\n  }; //deleting desired transaction from databse\n\n\n  const onDelete = async (amount, description, type, date) => {\n    let newData = await fetch('http://localhost:3001/delete', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    newData = await newData.json();\n\n    if (newData.length === 0) {\n      setData([{\n        amount: null,\n        description: '',\n        type: null,\n        date: ''\n      }]);\n    } else {\n      newData = newData.map(({\n        amount,\n        description,\n        type,\n        date\n      }) => ({\n        amount: parseFloat(amount),\n        description,\n        type,\n        date\n      }));\n      setData(newData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"budget-input\",\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(BudgetInput, {\n        onSubmit: fetchTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"reset-button\",\n      className: \"ui container\",\n      children: /*#__PURE__*/_jsxDEV(Reset, {\n        onReset: onReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BudgetList, {\n      data: data,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"NLVW3ZXU7kX9IxE18OdzhgobWfs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/budget/src/components/App.js"],"names":["React","useState","useEffect","BudgetInput","BudgetList","Balance","Reset","App","data","setData","amount","description","type","setDeleteAmount","setDeleteDescription","setDeleteType","setDeleteDate","date","fetchTransactions","response","fetch","method","headers","body","JSON","stringify","json","map","parseFloat","onReset","onDelete","newData","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport './App.css';\n\nconst App = () => {\n\n\tconst [data, setData] = useState([{ amount: null, description: '', type: null}]);\n\n\t\tuseEffect(()=>{\n\t setDeleteAmount(amount);\n\t setDeleteDescription(description);\n\t setDeleteType(type);\n\t setDeleteDate(date);\n\t},[])\n\n\t//fetching updated data after submitting new transaction\n\tconst fetchTransactions = async (amount, description, type, date) => {\n\t\tlet response = await fetch('http://localhost:3001/submit', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tresponse = await response.json();\n\t\tresponse = response.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\tsetData(response);\n\t}\n\n\t//clearing database after hitting reset\n\tconst onReset = async () => {\n\t\tawait fetch('http://localhost:3001/reset', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t})\n\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t}\n\n\t//deleting desired transaction from databse\n\tconst onDelete = async (amount, description, type, date) => {\n\t\tlet newData = await fetch('http://localhost:3001/delete', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tnewData = await newData.json();\n\t\tif (newData.length === 0) {\n\t\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t\t} else {\n\t\t\tnewData = newData.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\t\tsetData(newData);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div id=\"budget-input\" className=\"ui container\">\n\t\t\t\t<BudgetInput onSubmit={fetchTransactions} />\n\t\t\t</div>\n\t\t\t<div id=\"reset-button\" className=\"ui container\">\n\t\t\t\t<Reset onReset={onReset} />\n\t\t\t</div>\n\t\t\t<BudgetList data={data} onDelete={onDelete}/> \n\t\t\t<Balance data={data}/> \n\t\t</div>\n\n\t);\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}