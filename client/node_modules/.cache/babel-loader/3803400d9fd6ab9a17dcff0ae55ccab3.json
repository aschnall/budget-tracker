{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aschnall/Documents/Portfolio/budget/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport Signin from './Signin';\nimport Register from './Register';\nimport NavBar from './NavBar';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    amount: null,\n    description: '',\n    type: null\n  }]);\n  const [route, setRoute] = useState('signin');\n  const [isSignedIn, setIsSignedIn] = useState(false); //displaying whatever data exists in database on initial load\n\n  useEffect(() => {\n    const initialGet = async () => {\n      let initialData = await fetch('http://localhost:3001/');\n      initialData = await initialData.json();\n\n      if (initialData.length === 0) {\n        setData([{\n          amount: null,\n          description: '',\n          type: null,\n          date: ''\n        }]);\n      } else {\n        initialData = initialData.map(({\n          amount,\n          description,\n          type,\n          date\n        }) => ({\n          amount: parseFloat(amount),\n          description,\n          type,\n          date\n        }));\n        setData(initialData);\n      }\n    };\n\n    initialGet();\n  }, []); //fetching updated data after submitting new transaction\n\n  const fetchTransactions = async (amount, description, type, date) => {\n    let response = await fetch('http://localhost:3001/submit', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    response = await response.json();\n    response = response.map(({\n      amount,\n      description,\n      type,\n      date\n    }) => ({\n      amount: parseFloat(amount),\n      description,\n      type,\n      date\n    }));\n    setData(response);\n  }; //clearing database after hitting reset\n\n\n  const onReset = async () => {\n    await fetch('http://localhost:3001/reset', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    setData([{\n      amount: null,\n      description: '',\n      type: null,\n      date: ''\n    }]);\n  }; //deleting desired transaction from databse\n\n\n  const onDelete = async (amount, description, type, date) => {\n    let newData = await fetch('http://localhost:3001/delete', {\n      method: 'put',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount,\n        description: description,\n        type: type,\n        date: date\n      })\n    });\n    newData = await newData.json();\n\n    if (newData.length === 0) {\n      setData([{\n        amount: null,\n        description: '',\n        type: null,\n        date: ''\n      }]);\n    } else {\n      newData = newData.map(({\n        amount,\n        description,\n        type,\n        date\n      }) => ({\n        amount: parseFloat(amount),\n        description,\n        type,\n        date\n      }));\n      setData(newData);\n    }\n  };\n\n  const onRouteChange = route => {\n    if (route === 'home') {\n      setIsSignedIn(true);\n    }\n\n    setIsSignedIn(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      isSignedIn: isSignedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"budget-input\",\n        className: \"ui container\",\n        children: /*#__PURE__*/_jsxDEV(BudgetInput, {\n          onSubmit: fetchTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reset-button\",\n        className: \"ui container\",\n        children: /*#__PURE__*/_jsxDEV(Reset, {\n          onReset: onReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(BudgetList, {\n        data: data,\n        onDelete: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this); // return (\n  // \t<div>\n  // \t\t<div id=\"budget-input\" className=\"ui container\">\n  // \t\t\t<BudgetInput onSubmit={fetchTransactions} />\n  // \t\t</div>\n  // \t\t<div id=\"reset-button\" className=\"ui container\">\n  // \t\t\t<Reset onReset={onReset} />\n  // \t\t</div>\n  // \t\t<BudgetList data={data} onDelete={onDelete}/> \n  // \t\t<Balance data={data}/> \n  // \t</div>\n  // );\n};\n\n_s(App, \"eGfhsp0sSp1ANyf+Xh1K8yPqwlQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/budget/src/components/App.js"],"names":["React","useState","useEffect","BudgetInput","BudgetList","Balance","Reset","Signin","Register","NavBar","App","data","setData","amount","description","type","route","setRoute","isSignedIn","setIsSignedIn","initialGet","initialData","fetch","json","length","date","map","parseFloat","fetchTransactions","response","method","headers","body","JSON","stringify","onReset","onDelete","newData","onRouteChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BudgetInput from './BudgetInput';\nimport BudgetList from './BudgetList';\nimport Balance from './Balance';\nimport Reset from './Reset';\nimport Signin from './Signin';\nimport Register from './Register';\nimport NavBar from './NavBar';\nimport './App.css';\n\nconst App = () => {\n\n\tconst [data, setData] = useState([{ amount: null, description: '', type: null}]);\n\tconst [route, setRoute] = useState('signin');\n\tconst [isSignedIn, setIsSignedIn] = useState(false);\n\n\t//displaying whatever data exists in database on initial load\n\tuseEffect(()=> {\n\t\tconst initialGet = async () => {\n\t\t\tlet initialData = await fetch('http://localhost:3001/');\n\t\t\tinitialData = await initialData.json();\n\t\t\tif (initialData.length === 0) {\n\t\t\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t\t\t} else {\n\t\t\t\tinitialData = initialData.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\t\t\tsetData(initialData);\n\t\t\t}\n\t\t};\n\t\tinitialGet()\n\t},[])\n\n\t//fetching updated data after submitting new transaction\n\tconst fetchTransactions = async (amount, description, type, date) => {\n\t\tlet response = await fetch('http://localhost:3001/submit', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tresponse = await response.json();\n\t\tresponse = response.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\tsetData(response);\n\t}\n\n\t//clearing database after hitting reset\n\tconst onReset = async () => {\n\t\tawait fetch('http://localhost:3001/reset', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t})\n\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t}\n\n\t//deleting desired transaction from databse\n\tconst onDelete = async (amount, description, type, date) => {\n\t\tlet newData = await fetch('http://localhost:3001/delete', {\n\t\t\tmethod: 'put',\n\t\t\theaders: { 'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tamount: amount,\n\t\t\t\tdescription: description,\n\t\t\t\ttype: type,\n\t\t\t\tdate: date\n\t\t\t})\n\t\t})\n\t\tnewData = await newData.json();\n\t\tif (newData.length === 0) {\n\t\t\tsetData([{ amount: null, description: '', type: null, date: ''}]);\n\t\t} else {\n\t\t\tnewData = newData.map(({amount, description, type, date}) => ({amount: parseFloat(amount), description, type, date}));\n\t\t\tsetData(newData);\n\t\t}\n\t}\n\n\tconst onRouteChange = (route) => {\n\t\tif (route === 'home') {\n\t\t\tsetIsSignedIn(true);\n\t\t}\n\t\tsetIsSignedIn(route);\n\t}\n\n\n\treturn (\n\t\t<div>\n\t\t\t<NavBar isSignedIn={isSignedIn}/>\n\t\t\t{route === 'signin' \n\t\t\t? <Signin /> : (\n\t\t\t\t<div>\n\t\t\t\t\t<div id=\"budget-input\" className=\"ui container\">\n\t\t\t\t\t\t<BudgetInput onSubmit={fetchTransactions} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"reset-button\" className=\"ui container\">\n\t\t\t\t\t\t<Reset onReset={onReset} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<BudgetList data={data} onDelete={onDelete}/> \n\t\t\t\t\t<Balance data={data}/>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\n\t);\n\n\t// return (\n\t// \t<div>\n\t// \t\t<div id=\"budget-input\" className=\"ui container\">\n\t// \t\t\t<BudgetInput onSubmit={fetchTransactions} />\n\t// \t\t</div>\n\t// \t\t<div id=\"reset-button\" className=\"ui container\">\n\t// \t\t\t<Reset onReset={onReset} />\n\t// \t\t</div>\n\t// \t\t<BudgetList data={data} onDelete={onDelete}/> \n\t// \t\t<Balance data={data}/> \n\t// \t</div>\n\n\t// );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}